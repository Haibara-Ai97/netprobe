apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-net-probe-agent
  namespace: kube-net-probe
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-net-probe-agent
rules:
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-net-probe-agent
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-net-probe-agent
subjects:
- kind: ServiceAccount
  name: kube-net-probe-agent
  namespace: kube-net-probe
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kube-net-probe-agent
  namespace: kube-net-probe
  labels:
    app: kube-net-probe-agent
spec:
  selector:
    matchLabels:
      app: kube-net-probe-agent
  template:
    metadata:
      labels:
        app: kube-net-probe-agent
    spec:
      serviceAccountName: kube-net-probe-agent
      hostNetwork: true
      hostPID: true
      containers:
      - name: agent
        image: kube-net-probe-agent:latest
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
          capabilities:
            add:
            - SYS_ADMIN
            - NET_ADMIN
            - BPF
        ports:
        - name: metrics
          containerPort: 8080
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /health
            port: metrics
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: metrics
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        args:
        - --node-name=$(NODE_NAME)
        - --manager-address=kube-net-probe-manager.kube-net-probe.svc.cluster.local:9090
        - --metrics-bind-address=:8080
        - --ebpf-programs=network,security,performance
        volumeMounts:
        - name: proc
          mountPath: /host/proc
          readOnly: true
        - name: sys
          mountPath: /host/sys
          readOnly: true
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: usr-src
          mountPath: /usr/src
          readOnly: true
        - name: ebpf-programs
          mountPath: /etc/ebpf
          readOnly: true
      volumes:
      - name: proc
        hostPath:
          path: /proc
      - name: sys
        hostPath:
          path: /sys
      - name: lib-modules
        hostPath:
          path: /lib/modules
      - name: usr-src
        hostPath:
          path: /usr/src
      - name: ebpf-programs
        configMap:
          name: kube-net-probe-ebpf
      tolerations:
      - operator: Exists
        effect: NoSchedule
      - operator: Exists
        effect: NoExecute
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kube-net-probe-ebpf
  namespace: kube-net-probe
data:
  network-monitor.o: ""  # eBPF 编译后的对象文件将在这里
  security-monitor.o: "" # eBPF 编译后的对象文件将在这里
